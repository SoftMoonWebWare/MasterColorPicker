A note from the developer: (updated November 2023)

First, always use UTF-8.

Second, you might find that you need to clear your browser's cache every time you update this package.
[[ for FireFox:
click on "settings" in the Application Menu (upper-left corner)
click on "privacy & security"
scroll down to "cookies and site data"
click on "clear data"
you should probably UN-select "delete cookies" or you will get signed out of your favorite websites and your bank will hassle you about using a new device.
click "clear"
]]

Third:
I have been developing this project since my laptop was new, and it came with the premier Internet Exploder 9; I installed Opera®, FireFox®, Chrome®, and Safari® on Windows® to test this project.  Those were the bad-old-days, when no browser conformed to the "international specs", and the attempts to conform to parts of the specs were buggy at best.  Test, test, test; rewrite the CSS; test, test, test; rewrite the CSS; repeat...

Safari® was the first to go... it would fire-up my hard-drive for 10 minutes every time I booted up my computer, apparently searching every file (?) maybe looking for illegal copies of Apple® software (?)... Then it would upload data to the internet.  Whatever it was doing, it locked up access to my drive and slowed the entire computer down (and the software wasn't even opened in a window!); and as far as I'm concerned, it was a complete invasion of privacy and a severe security risk..

Opera® was the preferred browser of the time.  It (almost) always rendered any page correctly with any CSS. (if memory and understanding are correct, its code was made open-source and became the backbone of Blink which became the modern Chromium). But it would update itself without warning and clear all my user-data (bookmarks) and that would set me back a day.  It was the next to be removed from my system.

Chrome® was the best browser for a while...then Mozilla® announced a "breakthrough" in their SpiderMonkey® JavaScript™ engine, and the performance of this package became almost like a native application on my system (old Intel Core I7 @ 2Ghz), while Google’s® V8 JavaScript™ engine remained a bit sluggish.  About that same time Google® started to fully embrace the dark-side (so much for "do no evil") since they became a public corporation.  I quit using Chrome, and when I re-installed a new OS, I did not install Chrome.

The current MasterColorPicker package is currently only tested while being developed using FireFox®.  Since all major browsers now use the Chromium package in their code-base, and seem to adhere to most standard JavaScript specs, this, ahem, "should" not be a problem.

A friend of mine has an Apple® laptop, and MasterColorPicker seemed to work correctly on his system a couple years ago. He could not tell me what version of Safari® it was, when it was installed or how old the computer was, or if it updates itself.

I recently saw display computers at the store that were connected to the internet.  I got to actually see Microsoft’s Edge browser render the package...no problems that I could find in a very short test.  I also got to see Chrome® on a Chromebook.  It was failing basic tests.  Apparently not conforming to very basic standard JavaScript rules.  But Chromebooks use a Linux-based OS… … …

Since I first wrote this note, I have installed Ubuntu Linux which includes Firefox.  That whole system seems to fail miserably all the time in many ways.  This becomes apparent when using the MasterColorPicker.  As far as I can tell, the problem for MasterColorPicker is in the “x-window” functioning in either the OS or the Mozilla rendering engine.  I use “Komodo Edit” to write code, and that uses Mozilla’s rendering engine also, and that application also has problems with rendering its data on the screen.

Even more recently, I got to use MS Edge and Google Chrome at the public library.  A bit clunkier, but it worked after I updated the browsers to Jan 2024, except for the positioning of the pop-up menu in the MyPalette interface. I couldn't spend enough time to see if the bug could be fixed, so I used a new technique as an untested workaround.

Another even more recent update (Feb 2024): I worked with MS Edge & Google Chrome some more at the library.  The pop-up menu noted above now works fine.  The layout for the Simple² color-picker is not quite right.  I messed with it as best I could, but something is making the first column too wide.  FireFox does not give the vertical text "flow" in the layout, while Chromium does.  This means table-cell padding in one browser will not work the same in the other, so compromises were made.  I need more time with Chromium and maybe I could work out these "bugs" but the layout still works fine in actual use.
However, while Chromium browsers will allow you to save Palette files through the MyPalette or PaletteManager interfaces, the file-name becomes "lost".  Chromium seems to think you can not be trusted to manage your downloaded file, and creates a randomized name.  I don't remember that being the case in the past.  Both FireFox and Chromium browsers (Edge & Chrome) will allow you to download and save locally multiple files at a time through the PaletteManager.  FireFox handles this perfectly, by retaining the file-name, but with Chromium, you are left wondering which file is which.  So you should likely stick to locally saving only one file at a time when using Chromium.

So here it is folks:  get a real browser if this project seems to not work for you:  FireFox on Windows!

Ditch that user-profiling tool that Google created to find out more about YOU!
